//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECommerceWebsite.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ECommerceWebsiteEntities : DbContext
    {
        public ECommerceWebsiteEntities()
            : base("name=ECommerceWebsiteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cities> Cities { get; set; }
        public virtual DbSet<Feature_Values> Feature_Values { get; set; }
        public virtual DbSet<Features> Features { get; set; }
        public virtual DbSet<InvoiceItems> InvoiceItems { get; set; }
        public virtual DbSet<Invoices> Invoices { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<Product_Categories> Product_Categories { get; set; }
        public virtual DbSet<Product_Gallery> Product_Gallery { get; set; }
        public virtual DbSet<Product_Reviews> Product_Reviews { get; set; }
        public virtual DbSet<Product_Sizes> Product_Sizes { get; set; }
        public virtual DbSet<Product_Tags> Product_Tags { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<Products_Features> Products_Features { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<SizeGroups> SizeGroups { get; set; }
        public virtual DbSet<Sliders> Sliders { get; set; }
        public virtual DbSet<States> States { get; set; }
        public virtual DbSet<Stock> Stock { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<User_Favourites> User_Favourites { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<UsersInformation> UsersInformation { get; set; }
        public virtual DbSet<Warehouses> Warehouses { get; set; }
    
        public virtual ObjectResult<BestSellers_Result> BestSellers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BestSellers_Result>("BestSellers");
        }
    
        public virtual ObjectResult<Brands_Result> Brands()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Brands_Result>("Brands");
        }
    
        public virtual ObjectResult<GetBrandAndCategory_Result> GetBrandAndCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBrandAndCategory_Result>("GetBrandAndCategory");
        }
    
        public virtual ObjectResult<GetSizesStock_Result> GetSizesStock(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSizesStock_Result>("GetSizesStock", productIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetStock(Nullable<int> productId, Nullable<int> sizeId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var sizeIdParameter = sizeId.HasValue ?
                new ObjectParameter("SizeId", sizeId) :
                new ObjectParameter("SizeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetStock", productIdParameter, sizeIdParameter);
        }
    
        public virtual ObjectResult<OrderByFee_Result> OrderByFee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderByFee_Result>("OrderByFee");
        }
    
        public virtual ObjectResult<OrderByFeeDesc_Result> OrderByFeeDesc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderByFeeDesc_Result>("OrderByFeeDesc");
        }
    
        public virtual ObjectResult<Rating_Result> Rating()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rating_Result>("Rating");
        }
    }
}
